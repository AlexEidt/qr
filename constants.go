package qr

// Position coordinates of alignment patterns.
// Each position is defined by all combinations of the
// given coordinates except for when they overlap with the
// finder patterns.
var alignmentPositions = [][]int{
	{},
	{6, 18},
	{6, 22},
	{6, 26},
	{6, 30},
	{6, 34},
	{6, 22, 38},
	{6, 24, 42},
	{6, 26, 46},
	{6, 28, 50},
	{6, 30, 54},
	{6, 32, 58},
	{6, 34, 62},
	{6, 26, 46, 66},
	{6, 26, 48, 70},
	{6, 26, 50, 74},
	{6, 30, 54, 78},
	{6, 30, 56, 82},
	{6, 30, 58, 86},
	{6, 34, 62, 90},
	{6, 28, 50, 72, 94},
	{6, 26, 50, 74, 98},
	{6, 30, 54, 78, 102},
	{6, 28, 54, 80, 106},
	{6, 32, 58, 84, 110},
	{6, 30, 58, 86, 114},
	{6, 34, 62, 90, 118},
	{6, 26, 50, 74, 98, 122},
	{6, 30, 54, 78, 102, 126},
	{6, 26, 52, 78, 104, 130},
	{6, 30, 56, 82, 108, 134},
	{6, 34, 60, 86, 112, 138},
	{6, 30, 58, 86, 114, 142},
	{6, 34, 62, 90, 118, 146},
	{6, 30, 54, 78, 102, 126, 150},
	{6, 24, 50, 76, 102, 128, 154},
	{6, 28, 54, 80, 106, 132, 158},
	{6, 32, 58, 84, 110, 136, 162},
	{6, 26, 54, 82, 110, 138, 166},
	{6, 30, 58, 86, 114, 142, 170},
}

// Version information for each QR version.
var versionBits = []int{
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0b111110010010100,
	0b1000010110111100,
	0b1001101010011001,
	0b1010010011010011,
	0b1011101111110110,
	0b1100011101100010,
	0b1101100001000111,
	0b1110011000001101,
	0b1111100100101000,
	0b10000101101111000,
	0b10001010001011101,
	0b10010101000010111,
	0b10011010100110010,
	0b10100100110100110,
	0b10101011010000011,
	0b10110100011001001,
	0b10111011111101100,
	0b11000111011000100,
	0b11001000111100001,
	0b11010111110101011,
	0b11011000010001110,
	0b11100110000011010,
	0b11101001100111111,
	0b11110110101110101,
	0b11111001001010000,
	0b100000100111010101,
	0b100001011011110000,
	0b100010100010111010,
	0b100011011110011111,
	0b100100101100001011,
	0b100101010000101110,
	0b100110101001100100,
	0b100111010101000001,
	0b101000110001101001,
}

// Format Bits for Versions >= 7.
var formatBits = []int{
	0b101010000010010,
	0b101000100100101,
	0b101111001111100,
	0b101101101001011,
	0b100010111111001,
	0b100000011001110,
	0b100111110010111,
	0b100101010100000,
	0b111011111000100,
	0b111001011110011,
	0b111110110101010,
	0b111100010011101,
	0b110011000101111,
	0b110001100011000,
	0b110110001000001,
	0b110100101110110,
	0b1011010001001,
	0b1001110111110,
	0b1110011100111,
	0b1100111010000,
	0b11101100010,
	0b1001010101,
	0b110100001100,
	0b100000111011,
	0b11010101011111,
	0b11000001101000,
	0b11111100110001,
	0b11101000000110,
	0b10010010110100,
	0b10000110000011,
	0b10111011011010,
	0b10101111101101,
}

// Data capacity in bits for each QR Code Version.
// Indexing Scheme: (Version-1) * 4 + Error Correction Level (LMQH)
var capacity = []int{
	// 1
	152, 128, 104, 72,
	// 2
	272, 224, 176, 128,
	// 3
	440, 352, 272, 208,
	// 4
	640, 512, 384, 288,
	// 5
	864, 688, 496, 368,
	// 6
	1088, 864, 608, 480,
	// 7
	1248, 992, 704, 528,
	// 8
	1552, 1232, 880, 688,
	// 9
	1856, 1456, 1056, 800,
	// 10
	2192, 1728, 1232, 976,
	// 11
	2592, 2032, 1440, 1120,
	// 12
	2960, 2320, 1648, 1264,
	// 13
	3424, 2672, 1952, 1440,
	// 14
	3688, 2920, 2088, 1576,
	// 15
	4184, 3320, 2360, 1784,
	// 16
	4712, 3624, 2600, 2024,
	// 17
	5176, 4056, 2936, 2264,
	// 18
	5768, 4504, 3176, 2504,
	// 19
	6360, 5016, 3560, 2728,
	// 20
	6888, 5352, 3880, 3080,
	// 21
	7456, 5712, 4096, 3248,
	// 22
	8048, 6256, 4544, 3536,
	// 23
	8752, 6880, 4912, 3712,
	// 24
	9392, 7312, 5312, 4112,
	// 25
	10208, 8000, 5744, 4304,
	// 26
	10960, 8496, 6032, 4768,
	// 27
	11744, 9024, 6464, 5024,
	// 28
	12248, 9544, 6968, 5288,
	// 29
	13048, 10136, 7288, 5608,
	// 30
	13880, 10984, 7880, 5960,
	// 31
	14744, 11640, 8264, 6344,
	// 32
	15640, 12328, 8920, 6760,
	// 33
	16568, 13048, 9368, 7208,
	// 34
	17528, 13800, 9848, 7688,
	// 35
	18448, 14496, 10288, 7888,
	// 36
	19472, 15312, 10832, 8432,
	// 37
	20528, 15936, 11408, 8768,
	// 38
	21616, 16816, 12016, 9136,
	// 39
	22496, 17728, 12656, 9776,
	// 40
	23648, 18672, 13328, 10208,
}

// Number of blocks in QR code version.
// Ordered by Error Correction Level and Version.
// Index 0-3 corresponds to Version 1 with index 0 representing
// L = 7%, index 1: M = 15%, index 2: Q = 25% and index 3: H = 30% error correction.
// First value represents number of error correction blocks.
// Second value represents the total number of codewords.
// Third value represents the number of data codewords.
var blocks = [][]int{
	// 1
	{1, 26, 19},
	{1, 26, 16},
	{1, 26, 13},
	{1, 26, 9},
	// 2
	{1, 44, 34},
	{1, 44, 28},
	{1, 44, 22},
	{1, 44, 16},
	// 3
	{1, 70, 55},
	{1, 70, 44},
	{2, 35, 17},
	{2, 35, 13},
	// 4
	{1, 100, 80},
	{2, 50, 32},
	{2, 50, 24},
	{4, 25, 9},
	// 5
	{1, 134, 108},
	{2, 67, 43},
	{2, 33, 15, 2, 34, 16},
	{2, 33, 11, 2, 34, 12},
	// 6
	{2, 86, 68},
	{4, 43, 27},
	{4, 43, 19},
	{4, 43, 15},
	// 7
	{2, 98, 78},
	{4, 49, 31},
	{2, 32, 14, 4, 33, 15},
	{4, 39, 13, 1, 40, 14},
	// 8
	{2, 121, 97},
	{2, 60, 38, 2, 61, 39},
	{4, 40, 18, 2, 41, 19},
	{4, 40, 14, 2, 41, 15},
	// 9
	{2, 146, 116},
	{3, 58, 36, 2, 59, 37},
	{4, 36, 16, 4, 37, 17},
	{4, 36, 12, 4, 37, 13},
	// 10
	{2, 86, 68, 2, 87, 69},
	{4, 69, 43, 1, 70, 44},
	{6, 43, 19, 2, 44, 20},
	{6, 43, 15, 2, 44, 16},
	// 11
	{4, 101, 81},
	{1, 80, 50, 4, 81, 51},
	{4, 50, 22, 4, 51, 23},
	{3, 36, 12, 8, 37, 13},
	// 12
	{2, 116, 92, 2, 117, 93},
	{6, 58, 36, 2, 59, 37},
	{4, 46, 20, 6, 47, 21},
	{7, 42, 14, 4, 43, 15},
	// 13
	{4, 133, 107},
	{8, 59, 37, 1, 60, 38},
	{8, 44, 20, 4, 45, 21},
	{12, 33, 11, 4, 34, 12},
	// 14
	{3, 145, 115, 1, 146, 116},
	{4, 64, 40, 5, 65, 41},
	{11, 36, 16, 5, 37, 17},
	{11, 36, 12, 5, 37, 13},
	// 15
	{5, 109, 87, 1, 110, 88},
	{5, 65, 41, 5, 66, 42},
	{5, 54, 24, 7, 55, 25},
	{11, 36, 12, 7, 37, 13},
	// 16
	{5, 122, 98, 1, 123, 99},
	{7, 73, 45, 3, 74, 46},
	{15, 43, 19, 2, 44, 20},
	{3, 45, 15, 13, 46, 16},
	// 17
	{1, 135, 107, 5, 136, 108},
	{10, 74, 46, 1, 75, 47},
	{1, 50, 22, 15, 51, 23},
	{2, 42, 14, 17, 43, 15},
	// 18
	{5, 150, 120, 1, 151, 121},
	{9, 69, 43, 4, 70, 44},
	{17, 50, 22, 1, 51, 23},
	{2, 42, 14, 19, 43, 15},
	// 19
	{3, 141, 113, 4, 142, 114},
	{3, 70, 44, 11, 71, 45},
	{17, 47, 21, 4, 48, 22},
	{9, 39, 13, 16, 40, 14},
	// 20
	{3, 135, 107, 5, 136, 108},
	{3, 67, 41, 13, 68, 42},
	{15, 54, 24, 5, 55, 25},
	{15, 43, 15, 10, 44, 16},
	// 21
	{4, 144, 116, 4, 145, 117},
	{17, 68, 42},
	{17, 50, 22, 6, 51, 23},
	{19, 46, 16, 6, 47, 17},
	// 22
	{2, 139, 111, 7, 140, 112},
	{17, 74, 46},
	{7, 54, 24, 16, 55, 25},
	{34, 37, 13},
	// 23
	{4, 151, 121, 5, 152, 122},
	{4, 75, 47, 14, 76, 48},
	{11, 54, 24, 14, 55, 25},
	{16, 45, 15, 14, 46, 16},
	// 24
	{6, 147, 117, 4, 148, 118},
	{6, 73, 45, 14, 74, 46},
	{11, 54, 24, 16, 55, 25},
	{30, 46, 16, 2, 47, 17},
	// 25
	{8, 132, 106, 4, 133, 107},
	{8, 75, 47, 13, 76, 48},
	{7, 54, 24, 22, 55, 25},
	{22, 45, 15, 13, 46, 16},
	// 26
	{10, 142, 114, 2, 143, 115},
	{19, 74, 46, 4, 75, 47},
	{28, 50, 22, 6, 51, 23},
	{33, 46, 16, 4, 47, 17},
	// 27
	{8, 152, 122, 4, 153, 123},
	{22, 73, 45, 3, 74, 46},
	{8, 53, 23, 26, 54, 24},
	{12, 45, 15, 28, 46, 16},
	// 28
	{3, 147, 117, 10, 148, 118},
	{3, 73, 45, 23, 74, 46},
	{4, 54, 24, 31, 55, 25},
	{11, 45, 15, 31, 46, 16},
	// 29
	{7, 146, 116, 7, 147, 117},
	{21, 73, 45, 7, 74, 46},
	{1, 53, 23, 37, 54, 24},
	{19, 45, 15, 26, 46, 16},
	// 30
	{5, 145, 115, 10, 146, 116},
	{19, 75, 47, 10, 76, 48},
	{15, 54, 24, 25, 55, 25},
	{23, 45, 15, 25, 46, 16},
	// 31
	{13, 145, 115, 3, 146, 116},
	{2, 74, 46, 29, 75, 47},
	{42, 54, 24, 1, 55, 25},
	{23, 45, 15, 28, 46, 16},
	// 32
	{17, 145, 115},
	{10, 74, 46, 23, 75, 47},
	{10, 54, 24, 35, 55, 25},
	{19, 45, 15, 35, 46, 16},
	// 33
	{17, 145, 115, 1, 146, 116},
	{14, 74, 46, 21, 75, 47},
	{29, 54, 24, 19, 55, 25},
	{11, 45, 15, 46, 46, 16},
	// 34
	{13, 145, 115, 6, 146, 116},
	{14, 74, 46, 23, 75, 47},
	{44, 54, 24, 7, 55, 25},
	{59, 46, 16, 1, 47, 17},
	// 35
	{12, 151, 121, 7, 152, 122},
	{12, 75, 47, 26, 76, 48},
	{39, 54, 24, 14, 55, 25},
	{22, 45, 15, 41, 46, 16},
	// 36
	{6, 151, 121, 14, 152, 122},
	{6, 75, 47, 34, 76, 48},
	{46, 54, 24, 10, 55, 25},
	{2, 45, 15, 64, 46, 16},
	// 37
	{17, 152, 122, 4, 153, 123},
	{29, 74, 46, 14, 75, 47},
	{49, 54, 24, 10, 55, 25},
	{24, 45, 15, 46, 46, 16},
	// 38
	{4, 152, 122, 18, 153, 123},
	{13, 74, 46, 32, 75, 47},
	{48, 54, 24, 14, 55, 25},
	{42, 45, 15, 32, 46, 16},
	// 39
	{20, 147, 117, 4, 148, 118},
	{40, 75, 47, 7, 76, 48},
	{43, 54, 24, 22, 55, 25},
	{10, 45, 15, 67, 46, 16},
	// 40
	{19, 148, 118, 6, 149, 119},
	{18, 75, 47, 31, 76, 48},
	{34, 54, 24, 34, 55, 25},
	{20, 45, 15, 61, 46, 16},
}

// Polynomials for error correction.
// Key: Number of Error Correction Codewords.
// Value: Polynomial represented as list of coefficients.
var polynomials = map[int][]int{
	7:  {87, 229, 146, 149, 238, 102, 21},
	10: {251, 67, 46, 61, 118, 70, 64, 94, 32, 45},
	13: {74, 152, 176, 100, 86, 100, 106, 104, 130, 218, 206, 140, 78},
	15: {8, 183, 61, 91, 202, 37, 51, 58, 58, 237, 140, 124, 5, 99, 105},
	16: {120, 104, 107, 109, 102, 161, 76, 3, 91, 191, 147, 169, 182, 194, 225, 120},
	17: {43, 139, 206, 78, 43, 239, 123, 206, 214, 147, 24, 99, 150, 39, 243, 163, 136},
	18: {215, 234, 158, 94, 184, 97, 118, 170, 79, 187, 152, 148, 252, 179, 5, 98, 96, 153},
	20: {17, 60, 79, 50, 61, 163, 26, 187, 202, 180, 221, 225, 83, 239, 156, 164, 212, 212, 188, 190},
	22: {210, 171, 247, 242, 93, 230, 14, 109, 221, 53, 200, 74, 8, 172, 98, 80, 219, 134, 160, 105, 165, 231},
	24: {229, 121, 135, 48, 211, 117, 251, 126, 159, 180, 169, 152, 192, 226, 228, 218, 111, 0, 117, 232, 87, 96, 227, 21},
	26: {173, 125, 158, 2, 103, 182, 118, 17, 145, 201, 111, 28, 165, 53, 161, 21, 245, 142, 13, 102, 48, 227, 153, 145, 218, 70},
	28: {168, 223, 200, 104, 224, 234, 108, 180, 110, 190, 195, 147, 205, 27, 232, 201, 21, 43, 245, 87, 42, 195, 212, 119, 242, 37, 9, 123},
	30: {41, 173, 145, 152, 216, 31, 179, 182, 50, 48, 110, 86, 239, 96, 222, 125, 42, 173, 226, 193, 224, 130, 156, 37, 251, 216, 238, 40, 192, 180},
}

// For Polynomial Arithmetic.
var exp = []int{
	1, 2, 4, 8, 16, 32, 64, 128, 29, 58, 116, 232, 205, 135, 19, 38, 76, 152,
	45, 90, 180, 117, 234, 201, 143, 3, 6, 12, 24, 48, 96, 192, 157, 39, 78,
	156, 37, 74, 148, 53, 106, 212, 181, 119, 238, 193, 159, 35, 70, 140, 5,
	10, 20, 40, 80, 160, 93, 186, 105, 210, 185, 111, 222, 161, 95, 190, 97,
	194, 153, 47, 94, 188, 101, 202, 137, 15, 30, 60, 120, 240, 253, 231, 211,
	187, 107, 214, 177, 127, 254, 225, 223, 163, 91, 182, 113, 226, 217, 175,
	67, 134, 17, 34, 68, 136, 13, 26, 52, 104, 208, 189, 103, 206, 129, 31, 62,
	124, 248, 237, 199, 147, 59, 118, 236, 197, 151, 51, 102, 204, 133, 23, 46,
	92, 184, 109, 218, 169, 79, 158, 33, 66, 132, 21, 42, 84, 168, 77, 154, 41,
	82, 164, 85, 170, 73, 146, 57, 114, 228, 213, 183, 115, 230, 209, 191, 99,
	198, 145, 63, 126, 252, 229, 215, 179, 123, 246, 241, 255, 227, 219, 171, 75,
	150, 49, 98, 196, 149, 55, 110, 220, 165, 87, 174, 65, 130, 25, 50, 100, 200,
	141, 7, 14, 28, 56, 112, 224, 221, 167, 83, 166, 81, 162, 89, 178, 121, 242,
	249, 239, 195, 155, 43, 86, 172, 69, 138, 9, 18, 36, 72, 144, 61, 122, 244,
	245, 247, 243, 251, 235, 203, 139, 11, 22, 44, 88, 176, 125, 250, 233, 207,
	131, 27, 54, 108, 216, 173, 71, 142, 1,
}

var log = []int{
	0, 0, 1, 25, 2, 50, 26, 198, 3, 223, 51, 238, 27, 104, 199, 75, 4, 100, 224,
	14, 52, 141, 239, 129, 28, 193, 105, 248, 200, 8, 76, 113, 5, 138, 101, 47, 225,
	36, 15, 33, 53, 147, 142, 218, 240, 18, 130, 69, 29, 181, 194, 125, 106, 39, 249,
	185, 201, 154, 9, 120, 77, 228, 114, 166, 6, 191, 139, 98, 102, 221, 48, 253, 226,
	152, 37, 179, 16, 145, 34, 136, 54, 208, 148, 206, 143, 150, 219, 189, 241, 210,
	19, 92, 131, 56, 70, 64, 30, 66, 182, 163, 195, 72, 126, 110, 107, 58, 40, 84,
	250, 133, 186, 61, 202, 94, 155, 159, 10, 21, 121, 43, 78, 212, 229, 172, 115,
	243, 167, 87, 7, 112, 192, 247, 140, 128, 99, 13, 103, 74, 222, 237, 49, 197,
	254, 24, 227, 165, 153, 119, 38, 184, 180, 124, 17, 68, 146, 217, 35, 32, 137,
	46, 55, 63, 209, 91, 149, 188, 207, 205, 144, 135, 151, 178, 220, 252, 190,
	97, 242, 86, 211, 171, 20, 42, 93, 158, 132, 60, 57, 83, 71, 109, 65, 162, 31,
	45, 67, 216, 183, 123, 164, 118, 196, 23, 73, 236, 127, 12, 111, 246, 108,
	161, 59, 82, 41, 157, 85, 170, 251, 96, 134, 177, 187, 204, 62, 90, 203, 89,
	95, 176, 156, 169, 160, 81, 11, 245, 22, 235, 122, 117, 44, 215, 79, 174,
	213, 233, 230, 231, 173, 232, 116, 214, 244, 234, 168, 80, 88, 175,
}
